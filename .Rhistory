q()
1 +2
c(1, 2, 3) + c(2, 4, 3)
?data.frame
ls()
?ls()
a <- scan()
a <- scan()
d <- a + b
a <- scan()
d <- a + b
d
###############Chapitre Statistical Transformation#############
#1)Quel est le geom associé par défaut à stat_summary ? Refaites le graphique suivant en utilisant un geom_xxx au lieu de stat_summary.
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
library(tidyverse)
###############Chapitre Statistical Transformation#############
#1)Quel est le geom associé par défaut à stat_summary ? Refaites le graphique suivant en utilisant un geom_xxx au lieu de stat_summary.
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
#geom_pointrage
ggplot(data = diamonds) +
geom_pointrange(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
?geom_pointrage
?geom_pointrange
ggplot(data = diamonds) +
geom_pointrange(
mapping = aes(x = cut, y = depth),
ymin = min,
ymax = max,
fun = median
)
ggplot(data = diamonds) +
geom_pointrange(
mapping = aes(x = cut, y = depth),
ymin = min,
ymax = max,
)
ggplot(data = diamonds) +
geom_pointrange(
mapping = aes(x = cut, y = depth),
stat = "summary"
)
ggplot(data = diamonds) +
geom_pointrange(
mapping = aes(x = cut, y = depth),
stat = "summary",
fun.min = min,
fun.max = max,
fun = median
)
###############Chapitre Statistical Transformation#############
#1)Quel est le geom associé par défaut à stat_summary ? Refaites le graphique suivant en utilisant un geom_xxx au lieu de stat_summary.
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
###############Chapitre Statistical Transformation#############
#1)Quel est le geom associé par défaut à stat_summary ? Refaites le graphique suivant en utilisant un geom_xxx au lieu de stat_summary.
ggplot(data = diamonds) +
geom_pointrange(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median,
stat = "summary"
)
##2) Quelle est la différence entre geom_col et geom_bar ?
?geom_col
?geom_bar
ggplot(data = diamonds) +
geom_pointrange(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median,
stat = "summary"
)
ggplot(data = diamonds) +
geom_pointrange(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median,
stat = "summary"
)
ggplot(data = diamonds) +
geom_pointrange(
mapping = aes(x = cut, y = depth),
ymin = min,
ymax = max,
fun = median,
stat = "summary"
)
ggplot(data = diamonds) +
geom_pointrange(
mapping = aes(x = cut, y = depth),
ymin = min,
ymax = max,
y= median,
stat = "summary"
)
##2) Quelle est la différence entre geom_col et geom_bar ?
?geom_col
?geom_bar
##2) Quelle est la différence entre geom_col et geom_bar ?
?geom_col
?geom_bar
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
?geom_pointrange
###############Chapitre Statistical Transformation#############
#1)Quel est le geom associé par défaut à stat_summary ? Refaites le graphique suivant en utilisant un geom_xxx au lieu de stat_summary.
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median,
)
?stat_summary
###4) Quelle est la statistique calculée par stat_smooth ? Quel paramètre controle son comportement ?
?stat_smooth
##5)Quel est le problème dans les 2 graphiques suivants ?
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut),, y = ..prop..)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut), y = ..prop..)
##5)Quel est le problème dans les 2 graphiques suivants ?
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
?stat_summary
?geom_pointrange
###############Chapitre Statistical Transformation#############
#1)Quel est le geom associé par défaut à stat_summary ? Refaites le graphique suivant en utilisant un geom_xxx au lieu de stat_summary.
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median,
)
ggplot(data = diamonds) +
geom_pointrange(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median,
stat = "summary"
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop.., group = 1))
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..))
##5)Quel est le problème dans les 2 graphiques suivants ?
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, group = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..,  fill = color, group = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = prop,  fill = color), stat="identity" ))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = prop,  fill = color), stat="identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = prop),  fill = color), stat="identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = prop),  fill = color, stat="identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = prop,  fill = color), stat="identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = prop,  fill = color), stat = "identity")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop..,  fill = color), stat = "identity")
#2eme graphique
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..), position ='fill')
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop.., group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..), position ='fill')
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop.., group = color)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop.., group = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..), position ='fill')
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color, y = ..prop.., group = color))
############Chapitre Position adjustments#########################
# 1) Quel est le problème avec ce graphique ? Comment pouvez-vous l’améliorer ?
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point()
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
##2) Quels paramètres de geom_jitter contrôlent la quantité d’aléatoire appliqué à la position ?
?geom_jitter()
##3) Comparez geom_jitter et geom_count
?geom_jitter
?geom_count
##3) Comparez geom_jitter et geom_count
?geom_jitter
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_jitter()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_jitter()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_count()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline()
?data.frame
?ls()
a <- scan()
q()
shiny::runApp('R/ShinyExo1/ShinyExo1')
runApp('zz')
runApp('zz')
runApp('zz')
runApp('zz')
runApp('zz')
runApp('zz')
runApp('zz')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(tidyverse)
library(nycflights13)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(tidyverse)
library(nycflights13)
runApp('zz')
runApp('zz')
runApp('zz')
runApp('zz')
runApp('zz')
# Define UI for application that draws a histogram
ui <- fluidPage(# Application title
titlePanel("Flights"),
sidebarLayout(
sidebarPanel(
sliderInput(
"arr_delay_filter",
# nom de l'input
"Filtre retard a l'arrivée:",
min = -86,
max = 1272,
value = c(-86, 1272)
),
# valeur défaut quand on lance l'application
dateRangeInput(
"date_filter",
"Filtre par date:",
start = "2013-01-01",
end = "2013-12-31"
)
),
mainPanel(plotOutput("distPlot"),
# plotOutput("datePlot"),
dataTableOutput("df"))
))
runApp('zz')
# Define UI for application that draws a histogram
ui <- fluidPage(# Application title
titlePanel("Flights"),
sidebarLayout(
sidebarPanel(
sliderInput(
"arr_delay_filter",
# nom de l'input
"Filtre retard a l'arrivee:",
min = -86,
max = 1272,
value = c(-86, 1272)
),
# valeur défaut quand on lance l'application
dateRangeInput(
"date_filter",
"Filtre par date:",
start = "2013-01-01",
end = "2013-12-31"
)
),
mainPanel(plotOutput("distPlot"),
# plotOutput("datePlot"),
dataTableOutput("df"))
))
runApp('zz')
# Define UI for application that draws a histogram
ui <- fluidPage(# Application title
titlePanel("Flights"),
sidebarLayout(
sidebarPanel(
sliderInput(
"arr_delay_filter",
# nom de l'input
"Filtre retard a l'arrivee:",
min = -86,
max = 1272,
value = c(-86, 1272)
),
# valeur defaut quand on lance l'application
dateRangeInput(
"date_filter",
"Filtre par date:",
start = "2013-01-01",
end = "2013-12-31"
)
),
mainPanel(plotOutput("distPlot"),
# plotOutput("datePlot"),
dataTableOutput("df"))
))
runApp('zz')
runApp('R/ShinyExo1/ShinyExo1')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
library(tidyverse)
library(nycflights13)
runApp('zz')
# Define UI for application that draws a histogram
ui <- fluidPage(# Application title
titlePanel("Flights"),
sidebarLayout(
sidebarPanel(
sliderInput(
"arr_delay_filter",
# nom de l'input
"Filtre retard a l'arrivee:",
min = -86,
max = 1272,
value = c(-86, 1272)
),
# valeur defaut quand on lance l'application
dateRangeInput(
"date_filter",
"Filtre par date:",
start = "2013-01-01",
end = "2013-12-31"
)
),
mainPanel(plotOutput("distPlot"),
# plotOutput("datePlot"),
dataTableOutput("df"))
))
runApp('zz')
runApp('zz')
runApp('zz')
dbGetQuery(con, "SET NAMES 'utf8'")
con <- dbConnect(MySQL(), host="localhost", user="root", password="Kaoutar1993*", dbname="evaluation")
con <- dbConnect(MySQL(), host="localhost", user="root", password="Kaoutar1993*", dbname="evaluation")
con <- dbConnect(MySQL(), host="localhost", user="root", password="Kaoutar1993*", dbname="evaluation")
dbDisconnect(con)
onStop(function(){
dbDisconnect(con)
print("Je suis déconnecté")
})
shiny::runApp('R/projet_formulaire')
install.packages("shinythemes")
library(shinythemes)
runApp('dd')
install.packages("shinythemes")
## app.R ##
library(shinythemes)
runApp('dd')
install.packages("shinythemes")
shiny::runApp('dd')
runApp('dd')
install.packages("shinythemes")
shiny::runApp('dd')
runApp('R/projet_formulaire')
runApp('R/projet_formulaire')
